var startY = 0, diff = 0;
var y, //滑动区距离顶部的高度
  touchTop,//左侧是否滑动到了顶部
  cateIndex,//右侧分类索引
  position = "bottom",//默认在下面
  showCoupon = false;//展示优惠券;

var moveDistance = 0 //重置移动距离


function touchstart(event, ins) {
  var touch = event.touches[0] || event.changedTouches[0]
  var target = ins.selectComponent('.drag')

  startY = touch.pageY

  //赋值
  y = event.currentTarget.dataset.y
  cateIndex = event.currentTarget.dataset.cateIndex
  touchTop = event.currentTarget.dataset.touchTop
  moveDistance = 0//重置移动距离
  position = target.hasClass('position_bottom') ? 'bottom' : 'top'
}

function touchmove(event, ins) {
  var touch = event.touches[0] || event.changedTouches[0]
  var pageY = touch.pageY
  touchTop = event.currentTarget.dataset.touchTop
  moveDistance = pageY - startY
  //向下滚动
  if (moveDistance > diff) {
    //在顶部
    if (position == 'top') {
      if (touchTop && cateIndex == 0) {
        return false
      }
      return true
    }
    //在底部
    if (position == 'bottom') {
      return true
    }
    return true
  }
  //向上滚动
  if (moveDistance < diff) {
    // console.log('进到这里了')
    //当前位置不在顶部的时候透传
    if (position == 'top') {
      // console.log(touchTop,cateIndex)
      return true
    } else {
      return false
    }
  }

}

function touchend(event, ins) {
  var target = ins.selectComponent('.drag')
  touchTop = event.currentTarget.dataset.touchTop
  // console.log('touchend', position,touchTop, cateIndex,y,moveDistance)
  //向下滚动
  if (moveDistance > diff) {
    //在顶部
    if (position == 'top') {
      if (touchTop && cateIndex == 0) {
        target.removeClass('position_top')
        target.addClass('position_bottom')
        target.setStyle({
          transform: 'translateY(0px)'
        })
        ins.callMethod('refreshShowCoupon', {
          showCoupon: false
        })
        showCoupon = false

        position = 'bottom'
        return false
      }
      return true
    }
    //在底部
    else if (position == 'bottom') {
      //是否展示优惠券的标
      if (showCoupon) {
        target.setStyle({
          transform: 'translateY(0px)'
        })
        ins.callMethod('refreshShowCoupon', {
          showCoupon: false
        })
        showCoupon = false
        return false
      }
      return true
    }
  }
  // //向上滚动
  if (moveDistance < diff) {
    //currentY==0说明滚到顶部，此时不拦截事件，透传
    if (position == 'top') {
      return true
    } else if (position == 'bottom') {
      target.removeClass('position_bottom')
      target.addClass('position_top')
      target.setStyle({
        transform: 'translateY(-' + y + 'px)'

      })
      console.log('ttttttt====>', 'translateY(-' + y + 'px)')
      ins.callMethod('refreshShowCoupon', {
        showCoupon: true
      })
      showCoupon = true

      position = 'top'
      return true;
    }

  }
}

module.exports = {
  touchstart: touchstart,
  touchmove: touchmove,
  touchend: touchend,
}
